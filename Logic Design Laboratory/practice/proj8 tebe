LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
 
ENTITY testbenc_calculator IS
END testbenc_calculator;
 
ARCHITECTURE behavior OF testbenc_calculator IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT lcd_display
    PORT(
         FPGA_RSTB : IN  std_logic;
         CLK : IN  std_logic;
         LCD_A : OUT  std_logic_vector(1 downto 0);
         LCD_EN : OUT  std_logic;
         LCD_D : OUT  std_logic_vector(7 downto 0);
         data_out : IN  std_logic;
         load_operand1 : IN  std_logic;
         load_operand2 : IN  std_logic;
         load_plus : IN  std_logic;
         load_minus : IN  std_logic;
         calculate : IN  std_logic;
         operand : IN  std_logic_vector(3 downto 0)
        );
    END COMPONENT;
    

   --Inputs
   signal FPGA_RSTB : std_logic := '0';
   signal CLK : std_logic := '1';
   signal data_out : std_logic := '1';
   signal load_operand1 : std_logic := '1';
   signal load_operand2 : std_logic := '1';
   signal load_plus : std_logic := '1';
   signal load_minus : std_logic := '1';
   signal calculate : std_logic := '1';
   signal operand : std_logic_vector(3 downto 0) := (others => '0');

 	--Outputs
   signal LCD_A : std_logic_vector(1 downto 0);
   signal LCD_EN : std_logic;
   signal LCD_D : std_logic_vector(7 downto 0);

   -- Clock period definitions
   constant CLK_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: lcd_display PORT MAP (
          FPGA_RSTB => FPGA_RSTB,
          CLK => CLK,
          LCD_A => LCD_A,
          LCD_EN => LCD_EN,
          LCD_D => LCD_D,
          data_out => data_out,
          load_operand1 => load_operand1,
          load_operand2 => load_operand2,
          load_plus => load_plus,
          load_minus => load_minus,
          calculate => calculate,
          operand => operand
        );

   -- Clock process definitions
   CLK_process :process
   begin
		CLK <= '1';
		wait for CLK_period/2;
		CLK <= '0';
		wait for CLK_period/2;
   end process;
 

	-- Stimulus process
	stim_proc: process
	begin		
		wait for 10 ns;	
		FPGA_RSTB <= '1';
		wait for 4.5ms;
		
		------------------------ 7 + 8 = 0f
		operand <= "0111";
		wait for 1ms;
		load_operand1 <='0';
		wait for 10 ns;
		load_operand1 <='1';
		wait for 1 ms;
		
		load_plus <= '0';
		wait for 10 ns;
		load_plus <= '1';
		wait for 1 ms;
		
		operand <= "1000";
		wait for 1ms;
		load_operand2 <= '0';
		wait for 10 ns;
		load_operand2 <= '1';
		wait for 1 ms;
		
		calculate <= '0';
		wait for 10 ns;
		calculate <= '1';
		
		wait for 27 ms;
		
		------------------------ 4 + 5 = 09
		operand <= "0100";
		wait for 1ms;
		load_operand1 <='0';
		wait for 10 ns;
		load_operand1 <='1';
		wait for 1 ms;
		
		load_plus <= '0';
		wait for 10 ns;
		load_plus <= '1';
		wait for 1 ms;
		
		operand <= "0101";
		wait for 1ms;
		load_operand2 <= '0';
		wait for 10 ns;
		load_operand2 <= '1';
		wait for 1 ms;
		
		calculate <= '0';
		wait for 10 ns;
		calculate <= '1';
		
		wait for 27 ms;
		
		------------------------ f + b = 1A
		operand <= "1111";
		wait for 1ms;
		load_operand1 <='0';
		wait for 10 ns;
		load_operand1 <='1';
		wait for 1 ms;
		
		load_plus <= '0';
		wait for 10 ns;
		load_plus <= '1';
		wait for 1 ms;
		
		operand <= "1011";
		wait for 1ms;
		load_operand2 <= '0';
		wait for 10 ns;
		load_operand2 <= '1';
		wait for 1 ms;
		
		calculate <= '0';
		wait for 10 ns;
		calculate <= '1';
		
		wait for 27 ms;
		------------------------ e + 8 = 16
		operand <= "1110";
		wait for 1ms;
		load_operand1 <='0';
		wait for 10 ns;
		load_operand1 <='1';
		wait for 1 ms;
		
		load_plus <= '0';
		wait for 10 ns;
		load_plus <= '1';
		wait for 1 ms;
		
		operand <= "1000";
		wait for 1ms;
		load_operand2 <= '0';
		wait for 10 ns;
		load_operand2 <= '1';
		wait for 1 ms;
		
		calculate <= '0';
		wait for 10 ns;
		calculate <= '1';
		
		wait for 27 ms;
		------------------------ f - 8 = 07
		operand <= "1111";
		wait for 1ms;
		load_operand1 <='0';
		wait for 10 ns;
		load_operand1 <='1';
		wait for 1 ms;
		
		load_minus <= '0';
		wait for 10 ns;
		load_minus <= '1';
		wait for 1 ms;
		
		operand <= "1000";
		wait for 1ms;
		load_operand2 <= '0';
		wait for 10 ns;
		load_operand2 <= '1';
		wait for 1 ms;
		
		calculate <= '0';
		wait for 10 ns;
		calculate <= '1';
		
		wait for 40 ms;
		------------------------ 8 - e = -06
		operand <= "1000";
		wait for 1ms;
		load_operand1 <='0';
		wait for 10 ns;
		load_operand1 <='1';
		wait for 1 ms;
		
		load_minus <= '0';
		wait for 10 ns;
		load_minus <= '1';
		wait for 1 ms;
		
		operand <= "1110";
		wait for 1ms;
		load_operand2 <= '0';
		wait for 10 ns;
		load_operand2 <= '1';
		wait for 1 ms;
		
		calculate <= '0';
		wait for 10 ns;
		calculate <= '1';
		
		wait for 27 ms;
		
		
		
		
      wait;
   end process;

END;
